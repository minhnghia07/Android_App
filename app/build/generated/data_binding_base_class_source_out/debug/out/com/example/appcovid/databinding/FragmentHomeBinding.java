// Generated by view binder compiler. Do not edit!
package com.example.appcovid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appcovid.R;
import com.google.android.material.chip.Chip;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button button5;

  @NonNull
  public final Button button6;

  @NonNull
  public final Chip chip4;

  @NonNull
  public final Chip chip5;

  @NonNull
  public final TextView detailLink;

  @NonNull
  public final ConstraintLayout frameLayout;

  @NonNull
  public final ImageButton imageButton;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView11;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final TextView txtDeath;

  @NonNull
  public final TextView txtDeathInc;

  @NonNull
  public final TextView txtInfected;

  @NonNull
  public final TextView txtInfectedInc;

  @NonNull
  public final TextView txtRecovered;

  @NonNull
  public final TextView txtRecoveredInc;

  @NonNull
  public final CardView view;

  @NonNull
  public final CardView view2;

  @NonNull
  public final CardView view3;

  @NonNull
  public final View view4;

  @NonNull
  public final View view5;

  private FragmentHomeBinding(@NonNull ScrollView rootView, @NonNull Button button5,
      @NonNull Button button6, @NonNull Chip chip4, @NonNull Chip chip5,
      @NonNull TextView detailLink, @NonNull ConstraintLayout frameLayout,
      @NonNull ImageButton imageButton, @NonNull TextView textView10, @NonNull TextView textView11,
      @NonNull TextView textView12, @NonNull TextView textView13, @NonNull TextView textView14,
      @NonNull TextView textView15, @NonNull TextView textView4, @NonNull TextView textView5,
      @NonNull TextView textView9, @NonNull TextView txtDeath, @NonNull TextView txtDeathInc,
      @NonNull TextView txtInfected, @NonNull TextView txtInfectedInc,
      @NonNull TextView txtRecovered, @NonNull TextView txtRecoveredInc, @NonNull CardView view,
      @NonNull CardView view2, @NonNull CardView view3, @NonNull View view4, @NonNull View view5) {
    this.rootView = rootView;
    this.button5 = button5;
    this.button6 = button6;
    this.chip4 = chip4;
    this.chip5 = chip5;
    this.detailLink = detailLink;
    this.frameLayout = frameLayout;
    this.imageButton = imageButton;
    this.textView10 = textView10;
    this.textView11 = textView11;
    this.textView12 = textView12;
    this.textView13 = textView13;
    this.textView14 = textView14;
    this.textView15 = textView15;
    this.textView4 = textView4;
    this.textView5 = textView5;
    this.textView9 = textView9;
    this.txtDeath = txtDeath;
    this.txtDeathInc = txtDeathInc;
    this.txtInfected = txtInfected;
    this.txtInfectedInc = txtInfectedInc;
    this.txtRecovered = txtRecovered;
    this.txtRecoveredInc = txtRecoveredInc;
    this.view = view;
    this.view2 = view2;
    this.view3 = view3;
    this.view4 = view4;
    this.view5 = view5;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button5;
      Button button5 = ViewBindings.findChildViewById(rootView, id);
      if (button5 == null) {
        break missingId;
      }

      id = R.id.button6;
      Button button6 = ViewBindings.findChildViewById(rootView, id);
      if (button6 == null) {
        break missingId;
      }

      id = R.id.chip4;
      Chip chip4 = ViewBindings.findChildViewById(rootView, id);
      if (chip4 == null) {
        break missingId;
      }

      id = R.id.chip5;
      Chip chip5 = ViewBindings.findChildViewById(rootView, id);
      if (chip5 == null) {
        break missingId;
      }

      id = R.id.detail_link;
      TextView detailLink = ViewBindings.findChildViewById(rootView, id);
      if (detailLink == null) {
        break missingId;
      }

      id = R.id.frameLayout;
      ConstraintLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.imageButton;
      ImageButton imageButton = ViewBindings.findChildViewById(rootView, id);
      if (imageButton == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = ViewBindings.findChildViewById(rootView, id);
      if (textView13 == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.txt_death;
      TextView txtDeath = ViewBindings.findChildViewById(rootView, id);
      if (txtDeath == null) {
        break missingId;
      }

      id = R.id.txt_death_inc;
      TextView txtDeathInc = ViewBindings.findChildViewById(rootView, id);
      if (txtDeathInc == null) {
        break missingId;
      }

      id = R.id.txt_infected;
      TextView txtInfected = ViewBindings.findChildViewById(rootView, id);
      if (txtInfected == null) {
        break missingId;
      }

      id = R.id.txt_infected_inc;
      TextView txtInfectedInc = ViewBindings.findChildViewById(rootView, id);
      if (txtInfectedInc == null) {
        break missingId;
      }

      id = R.id.txt_recovered;
      TextView txtRecovered = ViewBindings.findChildViewById(rootView, id);
      if (txtRecovered == null) {
        break missingId;
      }

      id = R.id.txt_recovered_inc;
      TextView txtRecoveredInc = ViewBindings.findChildViewById(rootView, id);
      if (txtRecoveredInc == null) {
        break missingId;
      }

      id = R.id.view;
      CardView view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view2;
      CardView view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      id = R.id.view3;
      CardView view3 = ViewBindings.findChildViewById(rootView, id);
      if (view3 == null) {
        break missingId;
      }

      id = R.id.view4;
      View view4 = ViewBindings.findChildViewById(rootView, id);
      if (view4 == null) {
        break missingId;
      }

      id = R.id.view5;
      View view5 = ViewBindings.findChildViewById(rootView, id);
      if (view5 == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ScrollView) rootView, button5, button6, chip4, chip5,
          detailLink, frameLayout, imageButton, textView10, textView11, textView12, textView13,
          textView14, textView15, textView4, textView5, textView9, txtDeath, txtDeathInc,
          txtInfected, txtInfectedInc, txtRecovered, txtRecoveredInc, view, view2, view3, view4,
          view5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
